@using System.Security.Claims
@using Swarojgaar.Data
@model List<Swarojgaar.ViewModel.JobApplicationVM.GetAllJobApplicationsVM>
@inject Microsoft.AspNetCore.Identity.UserManager<User> UserManager
@inject ApplicationDbContext _dbContext
@if (TempData["ResultOk"] != null)
{
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.success('@TempData["ResultOk"]');
    </script>
}
@if (TempData["ResultNotOk"] != null)
{
    <script src="/lib/jquery/dist/jquery.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script type="text/javascript">
        toastr.error('@TempData["ResultNotOk"]');
    </script>
}

@{
    // Get the current user's information
    var userId = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    var userAppliedJobs = Model.Where(x => x.UserId == userId).ToList();
}
@functions {
    // Helper function to get status text based on status code
    string GetStatusText(int status)
    {
        switch (status)
        {
            case 1:
                return "Shortlisted";
            case 2:
                return "Rejected";
            default:
                return "Pending";
        }
    }
}

<div class="alert alert-success" style="margin-left: 12px; text-align: center">
    <h2>List of your applied jobs:</h2>
    <h2 class="btn btn-primary">Total Jobs Applied: @userAppliedJobs.Count</h2>
    <h2 class="btn btn-success">Shortlisted Jobs: @userAppliedJobs.Count(u => u.ApplicationStatus == 1)</h2>
    <h2 class="btn btn-warning">Pending Jobs: @userAppliedJobs.Count(u => u.ApplicationStatus == 0)</h2>
    <h2 class="btn btn-danger">Rejected Jobs: @userAppliedJobs.Count(u => u.ApplicationStatus == 2)</h2>
</div>
@if (userAppliedJobs.Any())
{
    <table class="table table-striped table-bordered table-hover" style="background-color: white">
        <thead class="table-warning">
            <tr>
                <th>
                    Organization
                </th>
                <th>
                    Location
                </th>
                <th>
                    Email
                </th>
                <th>
                    Contact Number
                </th>
                <th>
                    Title
                </th>
                <th>
                    Description
                </th>
                <th>
                    Salary
                </th>
                <th>
                    Status
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in userAppliedJobs)
            {
                var currentJob = await _dbContext.Jobs.FindAsync(item.JobId);
                var currentCompany = await UserManager.FindByIdAsync(currentJob.UserId);
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => currentCompany.FirstName) @Html.DisplayFor(modelItem => currentCompany.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => currentCompany.Location)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => currentCompany.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => currentCompany.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Salary)
                    </td>
                    <td>
                        @if (GetStatusText(item.ApplicationStatus) == "Rejected")
                        {
                            <button type="button" class="btn btn-danger" id="status_@item.JobApplicationId" data-status="@item.ApplicationStatus">@GetStatusText(item.ApplicationStatus)</button>

                        }
                        @if (GetStatusText(item.ApplicationStatus) == "Shortlisted")
                        {
                            <button type="button" class="btn btn-success" id="status_@item.JobApplicationId" data-status="@item.ApplicationStatus">@GetStatusText(item.ApplicationStatus)</button>

                        }
                        @if (GetStatusText(item.ApplicationStatus) == "Pending")
                        {
                            <button type="button" class="btn btn-warning" id="status_@item.JobApplicationId" data-status="@item.ApplicationStatus">@GetStatusText(item.ApplicationStatus)</button>

                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item"><a class="page-link" href="#">Previous</a></li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item"><a class="page-link" href="#">Next</a></li>
    </ul>
</nav>

<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script>
    function updateJobSeekerStatus(applicationId, status) {
        console.log('Updating status for applicationId:', applicationId, 'to status:', status);

        $.ajax({
            url: '/JobApplications/UpdateStatus',
            type: 'POST',
            data: { applicationId: applicationId, status: status },
            success: function (data) {
                if (data.success) {
                    // Update the UI dynamically
                    var statusText = getStatusText(status);
                    $('#status_' + applicationId).text(statusText).data('status', status);
                } else {
                    console.error('Error updating status:', data.message);
                }
            },
            error: function (error) {
                console.error('Error updating status:', error);
            }
        });
    }

    function getStatusText(status) {
        switch (status) {
            case 1:
                return "Shortlisted";
            case 2:
                return "Rejected";
            default:
                return "Pending";
        }
    }

    // On document ready, update the button text based on data-status attribute
    $(document).ready(function () {
        $('button[data-status]').each(function () {
            var status = $(this).data('status');
            var statusText = getStatusText(status);
            $(this).text(statusText);
        });
    });
</script>
