@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<Microsoft.AspNetCore.Identity.IdentityUser>
@inject UserManager<IdentityUser> _userManager
<h1>List of all users</h1>

<table class="table table-bordered table-hover" style="background-color: white">
    <thead>
        <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Roles</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    @foreach (var role in await _userManager.GetRolesAsync(user))
                    {
                        // Display roles as buttons
                        <button type="button" class="@GetButtonClass(role)" style="width: 115px">@role</button>
                    }
                </td>
                <td>
                    @if (await _userManager.IsInRoleAsync(user, "Admin"))
                    {
                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-primary" style="width: 150px">Details</a>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@user.Id" class="btn btn-primary">Details</a>
                    }
                    @if (!await _userManager.IsInRoleAsync(user, "Admin"))
                    {
                        <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@* Helper method to determine the button class based on the role *@
@functions {
    string GetButtonClass(string role)
    {
        switch (role)
        {
            case "Admin":
                return "btn btn-outline-danger";
            case "Job_Provider":
                return "btn btn-outline-primary";
            case "Job_Seeker":
                return "btn btn-outline-success";
            default:
                return "btn btn-outline-secondary";
        }
    }
}